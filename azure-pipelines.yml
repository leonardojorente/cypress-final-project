name: Cross Env E2E Tests

trigger: none # Manual trigger only

parameters:
- name: environment
  displayName: 'Select the environment to run the tests against'
  type: string
  default: dev
  values:
  - dev
  - staging
  - prod

variables:
  USER: $(USER)
  PASSWORD: $(PASSWORD)
  BASE_URL_WEB: $(BASE_URL_WEB)
  BASE_URL_API: $(BASE_URL_API)
  vmImage: 'ubuntu-latest'

jobs:
- job: option_example
  displayName: 'Option Example'
  pool:
    vmImage: $(vmImage)
  steps:
  - script: echo "input environment selected -> ${{ parameters.environment }}"
    displayName: 'Send greeting'

- job: pre_check
  displayName: 'Pre-Check'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
    displayName: 'Checkout code'
  
  - task: NodeTool@0
    displayName: 'Setup Node.js'
    inputs:
      versionSpec: '22.x'
  
  - script: npm ci
    displayName: 'Install dependencies'
  
  - script: npx eslint ./cypress --ext .js
    displayName: 'Check ESLint'

- job: e2e_tests
  displayName: 'E2E Tests'
  dependsOn: pre_check
  pool:
    vmImage: $(vmImage)
  container:
    image: cypress/browsers:node-22.11.0-chrome-130.0.6723.69-1-ff-132.0-edge-130.0.2849.56-1
    options: --user 1001
  environment: ${{ parameters.environment }}
  steps:
  - script: echo "The USER is $(USER) and the base url is $(BASE_URL_WEB)"
    displayName: 'Read variables'
    env:
      USER: $(USER)
      PASSWORD: $(PASSWORD)
      BASE_URL_WEB: $(BASE_URL_WEB)
      BASE_URL_API: $(BASE_URL_API)
  
  - checkout: self
    displayName: 'Checkout code'
  
  - task: NodeTool@0
    displayName: 'Setup Node.js'
    inputs:
      versionSpec: '22.x'
  
  - script: npm ci
    displayName: 'Install dependencies'
  
  - script: npx cypress run --browser chrome --headless --quiet --spec 'cypress/e2e/UI-tests/log-tests.spec.cy.js' --env allure=true
    displayName: 'Cypress run api tests'
    env:
      USER: $(USER)
      PASSWORD: $(PASSWORD)
      BASE_URL_WEB: $(BASE_URL_WEB)
      BASE_URL_API: $(BASE_URL_API)